{
  "info": {
    "name": "Jacha Aru API",
    "description": "API collection for Jacha Aru consultation management system - Fundación Aru",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "jacha-aru-api-v1"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombres\": \"Juan Carlos\",\n  \"apellidos\": \"Pérez López\",\n  \"mail\": \"juan.perez@example.com\",\n  \"pass\": \"password123\",\n  \"googleId\": null,\n  \"telegramId\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    pm.collectionVariables.set('user_id', response.user.id);",
                  "    console.log('Login successful for user:', response.user.mail);",
                  "} else {",
                  "    console.log('Login failed:', pm.response.json().message);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mail\": \"juan.perez@example.com\",\n  \"pass\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          }
        },
        {
          "name": "Test Invalid Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Returns 401 for invalid credentials', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Contains error message', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('Invalid credentials');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mail\": \"nonexistent@example.com\",\n  \"pass\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          }
        },
        {
          "name": "Test Duplicate Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Should either succeed (new user) or fail with 401 (existing user)",
                  "if (pm.response.code === 201) {",
                  "    console.log('New user registered successfully');",
                  "} else if (pm.response.code === 401) {",
                  "    const response = pm.response.json();",
                  "    console.log('Registration blocked:', response.message);",
                  "    pm.test('Contains meaningful error message', function () {",
                  "        pm.expect(response.message).to.include('already exists');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombres\": \"Juan Carlos\",\n  \"apellidos\": \"Pérez López\",\n  \"mail\": \"juan.perez@example.com\",\n  \"pass\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Usuarios",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/usuarios",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "usuarios"
              ]
            }
          }
        },
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/usuarios/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "usuarios",
                "me"
              ]
            }
          }
        },
        {
          "name": "Update My Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombres\": \"Juan Carlos Updated\",\n  \"apellidos\": \"Pérez López\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/usuarios/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "usuarios",
                "me"
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/usuarios/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "usuarios",
                "1"
              ]
            }
          }
        },
        {
          "name": "Update User by ID",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombres\": \"Updated Name\",\n  \"apellidos\": \"Updated Surname\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/usuarios/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "usuarios",
                "1"
              ]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/usuarios/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "usuarios",
                "1"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Categorias",
      "item": [
        {
          "name": "Get All Categorias",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categorias",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categorias"
              ]
            }
          }
        },
        {
          "name": "Get Categoria by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categorias/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categorias",
                "1"
              ]
            }
          }
        },
        {
          "name": "Get Temas by Categoria",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categorias/1/temas",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categorias",
                "1",
                "temas"
              ]
            }
          }
        },
        {
          "name": "Create Categoria",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"categoria\": \"Educación\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categorias",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categorias"
              ]
            }
          }
        },
        {
          "name": "Update Categoria",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"categoria\": \"Educación Superior\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categorias/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categorias",
                "1"
              ]
            }
          }
        },
        {
          "name": "Delete Categoria",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test for successful deletion",
                  "if (pm.response.code === 200) {",
                  "    console.log('Category deleted successfully');",
                  "}",
                  "",
                  "// Test for foreign key constraint errors",
                  "if (pm.response.code === 400) {",
                  "    const response = pm.response.json();",
                  "    console.log('Deletion prevented:', response.message);",
                  "    pm.test('Contains helpful error message', function () {",
                  "        pm.expect(response.message).to.include('Cannot delete category');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categorias/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categorias",
                "1"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Temas",
      "item": [
        {
          "name": "Get All Temas",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/temas",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "temas"
              ]
            }
          }
        },
        {
          "name": "Get Temas by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/temas?categoriaId=1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "temas"
              ],
              "query": [
                {
                  "key": "categoriaId",
                  "value": "1",
                  "description": "Filter themes by category ID"
                }
              ]
            }
          }
        },
        {
          "name": "Get Tema by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/temas/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "temas",
                "1"
              ]
            }
          }
        },
        {
          "name": "Create Tema",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tema\": \"Acceso a la educación\",\n  \"categoriaId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/temas",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "temas"
              ]
            }
          }
        },
        {
          "name": "Update Tema",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tema\": \"Acceso equitativo a la educación\",\n  \"categoriaId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/temas/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "temas",
                "1"
              ]
            }
          }
        },
        {
          "name": "Delete Tema",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test for successful deletion",
                  "if (pm.response.code === 200) {",
                  "    console.log('Tema deleted successfully');",
                  "}",
                  "",
                  "// Test for foreign key constraint errors",
                  "if (pm.response.code === 400) {",
                  "    const response = pm.response.json();",
                  "    console.log('Deletion prevented:', response.message);",
                  "    pm.test('Contains helpful error message', function () {",
                  "        pm.expect(response.message).to.include('Cannot delete theme');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/temas/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "temas",
                "1"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Indicadores",
      "item": [
        {
          "name": "Get All Indicadores",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/indicadores",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "indicadores"
              ]
            }
          }
        },
        {
          "name": "Get Indicadores by Theme",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/indicadores?temaId=1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "indicadores"
              ],
              "query": [
                {
                  "key": "temaId",
                  "value": "1",
                  "description": "Filter indicators by theme ID"
                }
              ]
            }
          }
        },
        {
          "name": "Create Indicador",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"indicador\": \"Tasa de matrícula escolar\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/indicadores",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "indicadores"
              ]
            }
          }
        },
        {
          "name": "Update Indicador",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"indicador\": \"Tasa neta de matrícula escolar\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/indicadores/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "indicadores",
                "1"
              ]
            }
          }
        },
        {
          "name": "Delete Indicador",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test for successful deletion",
                  "if (pm.response.code === 200) {",
                  "    console.log('Indicador deleted successfully');",
                  "}",
                  "",
                  "// Test for foreign key constraint errors",
                  "if (pm.response.code === 400) {",
                  "    const response = pm.response.json();",
                  "    console.log('Deletion prevented:', response.message);",
                  "    pm.test('Contains helpful error message', function () {",
                  "        pm.expect(response.message).to.include('Cannot delete indicator');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/indicadores/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "indicadores",
                "1"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Consultations",
      "item": [
        {
          "name": "Consulta Rapida",
          "item": [
            {
              "name": "Get My Quick Consultations",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/consultations/rapidas",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "consultations",
                    "rapidas"
                  ]
                }
              }
            },
            {
              "name": "Create Quick Consultation",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filtroId\": 1\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/consultations/rapidas",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "consultations",
                    "rapidas"
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "Consulta Filtro",
          "item": [
            {
              "name": "Get My Filter Consultations",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/consultations/filtros",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "consultations",
                    "filtros"
                  ]
                }
              }
            },
            {
              "name": "Create Filter Consultation",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filtroId\": 1,\n  \"investigadorId\": 1\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/consultations/filtros",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "consultations",
                    "filtros"
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "Consulta Compleja",
          "item": [
            {
              "name": "Get My Complex Consultations",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/consultations/complejas",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "consultations",
                    "complejas"
                  ]
                }
              }
            },
            {
              "name": "Create Complex Consultation",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"consulta\": \"Necesito análisis detallado de tendencias educativas en áreas rurales\",\n  \"investigadorId\": 1\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/consultations/complejas",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "consultations",
                    "complejas"
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Investigadores",
      "item": [
        {
          "name": "Get All Investigadores",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/investigadores",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "investigadores"
              ]
            }
          }
        },
        {
          "name": "Create Investigador",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"María\",\n  \"apellido\": \"Rodriguez\",\n  \"correo\": \"maria.rodriguez@fundacionaru.org\",\n  \"telegramId\": \"@maria_researcher\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/investigadores",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "investigadores"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Filtros",
      "item": [
        {
          "name": "Get All Filtros",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/filtros",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "filtros"
              ]
            }
          }
        },
        {
          "name": "Create Filtro",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"categoriaId\": 1,\n  \"temaId\": 1,\n  \"indicadorId\": 1,\n  \"desegregacionId\": 1,\n  \"yearId\": 1,\n  \"fuenteId\": 1,\n  \"fichaMetodologicaId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/filtros",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "filtros"
              ]
            }
          }
        },
        {
          "name": "Get Filtro by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/filtros/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "filtros",
                "1"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Data Management",
      "item": [
        {
          "name": "Years",
          "item": [
            {
              "name": "Get All Years",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/years",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "years"
                  ]
                }
              }
            },
            {
              "name": "Create Year",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"year\": 2024\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/years",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "years"
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "Fuentes",
          "item": [
            {
              "name": "Get All Fuentes",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/fuentes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "fuentes"
                  ]
                }
              }
            },
            {
              "name": "Create Fuente",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"fuente\": \"INE Bolivia\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/fuentes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "fuentes"
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "Desegregacion",
          "item": [
            {
              "name": "Get All Desegregaciones",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/desegregaciones",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "desegregaciones"
                  ]
                }
              }
            },
            {
              "name": "Get All Tipos Desegregacion",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tipos-desegregacion",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "tipos-desegregacion"
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Responses",
      "item": [
        {
          "name": "Get Responses for Complex Consultation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/responses/complex/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "responses",
                "complex",
                "1"
              ]
            }
          }
        },
        {
          "name": "Create Response for Complex Consultation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"consultaComplejaId\": 1,\n  \"costo\": 150.00,\n  \"documento\": \"respuesta_analisis_educacion_rural.pdf\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/responses/complex",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "responses",
                "complex"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Get API Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                ""
              ]
            }
          }
        }
      ]
    }
  ]
}